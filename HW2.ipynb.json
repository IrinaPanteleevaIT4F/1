{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: psycopg2-binary in /opt/anaconda3/lib/python3.7/site-packages (2.8.4)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "# Задание 1. Соединение Python с базой данных по API\n",
    "# Для соединения Python с базой данных необходимо открыть Anaconda Prompt и выполните следующую команду (команду также можно выполнить из ячейки Jupyter)\n",
    "# pip install psycopg2\n",
    "# Для MacOS команда будет следующая: \n",
    "pip install psycopg2-binary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Insert password: ········\n",
      "{'user': 'postgres', 'dbname': 'postgres', 'host': 'localhost', 'port': '5433', 'tty': '', 'options': '', 'sslmode': 'prefer', 'sslcompression': '0', 'krbsrvname': 'postgres', 'target_session_attrs': 'any'}\n"
     ]
    }
   ],
   "source": [
    "# Создаем соединение c базой данных (Для того, чтобы определить данные для подключения с базой данных \n",
    "# необходимо зайти в Posgresql, после введения пользовательского пароля, кликаем \"Servers\", \n",
    "# затем кликаем правой кнопкой мыши, в сплывающем окне выбираем \"Properties\", переходим в раздел \"Connection\".\n",
    "# В этом разделе отображены все данные, необходимые для соединения с базой данных. \n",
    "\n",
    "import psycopg2 # драйвер для postgresql\n",
    "import getpass  # эта функция скрывает пароль, можно не вводить данную функцию, \n",
    "# тогда в строке password вам необходимо указать свой пароль от базы данных \n",
    "\n",
    "conn=psycopg2.connect(user='postgres',\n",
    "                      database='postgres',\n",
    "                      host='localhost',\n",
    "                      port='5433',\n",
    "                      password=getpass.getpass('Insert password: ')\n",
    "                        )\n",
    "print(conn.get_dsn_parameters())\n",
    "\n",
    "# Результат задания 1: происходит соединение с базой данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ENT_NAME</th>\n",
       "      <th>GRADE</th>\n",
       "      <th>DATE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Альянс-Лизинг</td>\n",
       "      <td>A+</td>\n",
       "      <td>2014-06-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Диг-Банк</td>\n",
       "      <td>B+</td>\n",
       "      <td>2014-03-26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>СтарБанк</td>\n",
       "      <td>B++</td>\n",
       "      <td>2014-12-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Ренессанс Страхование Гр</td>\n",
       "      <td>A++</td>\n",
       "      <td>2014-12-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>СБ Банк</td>\n",
       "      <td>A</td>\n",
       "      <td>2014-12-31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>839</td>\n",
       "      <td>Актив Банк АКБ</td>\n",
       "      <td>A</td>\n",
       "      <td>2014-01-13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>840</td>\n",
       "      <td>Пари СК</td>\n",
       "      <td>A+</td>\n",
       "      <td>2014-01-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>841</td>\n",
       "      <td>Мегаполис КБ</td>\n",
       "      <td>A</td>\n",
       "      <td>2014-01-10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>842</td>\n",
       "      <td>БФА УК</td>\n",
       "      <td>A+</td>\n",
       "      <td>2014-01-09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>843</td>\n",
       "      <td>ЮГ-Инвестбанк АБ</td>\n",
       "      <td>A</td>\n",
       "      <td>2014-01-09</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>844 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     ENT_NAME GRADE        DATE\n",
       "0               Альянс-Лизинг    A+  2014-06-25\n",
       "1                    Диг-Банк    B+  2014-03-26\n",
       "2                    СтарБанк   B++  2014-12-31\n",
       "3    Ренессанс Страхование Гр   A++  2014-12-31\n",
       "4                     СБ Банк     A  2014-12-31\n",
       "..                        ...   ...         ...\n",
       "839            Актив Банк АКБ     A  2014-01-13\n",
       "840                   Пари СК    A+  2014-01-10\n",
       "841              Мегаполис КБ     A  2014-01-10\n",
       "842                    БФА УК    A+  2014-01-09\n",
       "843          ЮГ-Инвестбанк АБ     A  2014-01-09\n",
       "\n",
       "[844 rows x 3 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Задание 2\n",
    "# Получение данных из БД с помощью pandas\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "# Python воспринимает информацию, как обычный текст, если она отделена символом \\\n",
    "#  Для того чтобы написать запрос sql в несколько строчек, \n",
    "# необходимо применить три раза двойные кавычки перед запросом и в конце запроса.\n",
    "# Запрос для задания 3 следующий:\n",
    "\n",
    "query=\"\"\"SELECT rating_task1.\\\"ENT_NAME\\\", rating_task1.\\\"GRADE\\\", rating_task1.\\\"DATE\\\"\n",
    "FROM rating_task1 \n",
    "INNER JOIN (SELECT \\\"ENT_NAME\\\", \\\"DATE\\\"\n",
    "FROM rating_task1 \n",
    "WHERE \\\"AGENCY_ID\\\" = 'EXP' \n",
    "AND \\\"DATE\\\" >= '2014/01/01' AND \\\"DATE\\\" <= '2015/01/01' \n",
    "GROUP BY \\\"ENT_NAME\\\", \\\"DATE\\\") \n",
    "p ON rating_task1.\\\"ENT_NAME\\\" = p.\\\"ENT_NAME\\\" \n",
    "AND rating_task1.\\\"DATE\\\"=p.\\\"DATE\\\" \n",
    "WHERE \\\"CHANGE\\\" != 'снят' AND \\\"CHANGE\\\" != 'приостановлен'\"\"\"\n",
    "\n",
    "data=pd.read_sql_query(query, conn)\n",
    "data\n",
    "\n",
    "# Если необходимо изменить диапазон дат, то, соответственно, в строке \\\"DATE\\\" вводится нужный диапазон"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
